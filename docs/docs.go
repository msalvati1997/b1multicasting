// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "salvatimartina97@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/deliver/{mId}": {
            "get": {
                "description": "Get Deliver-Message queue of Group by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliver"
                ],
                "summary": "Get Deliver-Message queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Multicast group id group",
                        "name": "mId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.Delivery"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "description": "Get Multicast Groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get Multicast Groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.MulticastInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Multicast Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Create Multicast Group or join in an existing group",
                "parameters": [
                    {
                        "description": "Specify the id and type of new multicast group",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/multicastapp.MulticastReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.MulticastInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            }
        },
        "/groups/{mId}": {
            "get": {
                "description": "Get Multicast GroupInfo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get Multicast GroupInfo by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Multicast group id group",
                        "name": "mId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.MulticastInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Start multicast group by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Start multicast group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Multicast group id group",
                        "name": "mId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.MulticastInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Delete an existing group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Multicast group id group",
                        "name": "mId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.MulticastInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            }
        },
        "/messaging/{mId}": {
            "get": {
                "description": "Get Messages of a Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messaging"
                ],
                "summary": "Get Messages of a Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Multicast group id group",
                        "name": "mId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/multicastapp.Message"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Multicast a message to a group mId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messaging"
                ],
                "summary": "Multicast a message to a group mId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Multicast group id group",
                        "name": "mId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message to multicast",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/multicastapp.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "basic.Message": {
            "type": "object",
            "properties": {
                "MessageHeader": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Payload": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "multicastapp.Member": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "member_id": {
                    "type": "string"
                },
                "ready": {
                    "type": "boolean"
                }
            }
        },
        "multicastapp.Message": {
            "type": "object",
            "properties": {
                "MessageHeader": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Payload": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "multicastapp.MulticastInfo": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/multicastapp.Member"
                    }
                },
                "multicast_id": {
                    "type": "string"
                },
                "multicast_type": {
                    "type": "string"
                },
                "received_messages": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "multicastapp.MulticastReq": {
            "type": "object",
            "properties": {
                "multicast_id": {
                    "type": "string"
                },
                "multicast_type": {
                    "type": "string"
                }
            }
        },
        "multicastapp.Response": {
            "type": "object",
            "properties": {
                "h": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "utils.DelivererNode": {
            "type": "object",
            "properties": {
                "nodeId": {
                    "type": "string"
                }
            }
        },
        "utils.Delivery": {
            "type": "object",
            "properties": {
                "deliverer": {
                    "$ref": "#/definitions/utils.DelivererNode"
                },
                "m": {
                    "$ref": "#/definitions/basic.Message"
                },
                "status": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/multicast/v1",
	Schemes:     []string{},
	Title:       "MULTICAST API",
	Description: "This is a multicast API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
